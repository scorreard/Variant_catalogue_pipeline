ReferenceDir	= "testdata"

env {
	JAVA_CMD = "/usr"
	JAVA_HOME = "/usr"
	NXF_JAVA_HOME = "/usr"
}

params {
	run             				= "Version_0.0.1"
	batch           				= "testdata"
        reads                           		= "Variant_catalogue_pipeline/testdata/*_{1,2}.fq.gz"
        outdir_ind                                      = "$launchDir/Processed/Individual/"
        outdir_pop                                      = "$launchDir/Processed/Population"
	tmp_dir						= "$launchDir/Processed/tmp"

	//Constant
	SNV						= "SNV"
	STR						= "STR"
	MEI						= "MEI"
	SV						= "SV"
	MT						= "MT"
        chrM                                            = "chrM"
        params.assembly_MT                              = "GRCh38"

	// Softwares directories
        SINGULARITY_TMPDIR                              = '/tmp/'

	//MT subworkflow necessary files
	ref_genome_MT   				= "Variant_catalogue_pipeline/testdata/mitochondrial_references/Homo_sapiens_assembly38.chrM.fasta"
	ref_genome_MT_index 				= "Variant_catalogue_pipeline/testdata/mitochondrial_references/Homo_sapiens_assembly38.chrM.fasta.fai"
	ref_genome_MT_dict 				= "Variant_catalogue_pipeline/testdata/mitochondrial_references/Homo_sapiens_assembly38.chrM.dict"
	ref_genome_MT_shifted				= "Variant_catalogue_pipeline/testdata/mitochondrial_references/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta"
	ref_genome_MT_shifted_index 			= "Variant_catalogue_pipeline/testdata/mitochondrial_references/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.fai"
	ref_genome_MT_shifted_dict 			= "Variant_catalogue_pipeline/testdata/mitochondrial_references/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.dict"
        blacklist_sites_hg38_MT                         = "Variant_catalogue_pipeline/testdata/mitochondrial_references/blacklist_sites.hg38.chrM.bed"
        blacklist_sites_hg38_MT_index                   = "Variant_catalogue_pipeline/testdata/mitochondrial_references/blacklist_sites.hg38.chrM.bed.idx"
        control_region_shifted_reference_interval_list  = "Variant_catalogue_pipeline/testdata/mitochondrial_references/control_region_shifted.chrM.interval_list"
        non_control_region_interval_list                = "Variant_catalogue_pipeline/testdata/mitochondrial_references/non_control_region.chrM.interval_list"
        ShiftBack_chain                                 = "Variant_catalogue_pipeline/testdata/mitochondrial_references/ShiftBack.chain"
	
        gnomad_MT_frequ                                 = "testdata/gnomad.genomes.v3.1.sites.chrM.reduced_annotations.tsv"
	mitotip_predictions_table                       = 'Variant_catalogue_pipeline/testdata/mitochondrial_references/mitotip_scores_08_27_2020.txt'
	pon_predictions_table				= 'Variant_catalogue_pipeline/testdata/mitochondrial_references/pon_mt_trna_predictions_08_27_2020.txt'
	artifact_prone_sites_bed			= 'Variant_catalogue_pipeline/testdata/mitochondrial_references/artifact_prone_sites.bed'
	
	severity_table					= "Variant_catalogue_pipeline/severity_table.tsv"
        
	//A copy of the reference was done locally because Hail could not read the copy located in a common directory
        GRCh38_MT_local_fasta                           = 'Variant_catalogue_pipeline/testdata/mitochondrial_references/Homo_sapiens_assembly38.chrM.fasta'
        GRCh38_MT_local_fai                             = 'Variant_catalogue_pipeline/testdata/mitochondrial_references/Homo_sapiens_assembly38.chrM.fasta.fai'

        //Annotation files
        vep_cache_merged                                = "testdata/VEP/"
        vep_cache_merged_version                        = "105"
        dir_plugin                                      = "testdata/VEP/Plugins/"

        // Boilerplate options
        help = false
}


profiles {

        GRCh37 {
                params.ref                              = 'Variant_catalogue_pipeline/testdata/reference/human_g1k_v37_decoy.small.fasta'
                params.ref_index                        = 'Variant_catalogue_pipeline/testdata/reference/human_g1k_v37_decoy.small.fasta.fai'

		//Constant
		params.assembly				= 'GRCh37'
                params.Mitochondrial_chromosome		= 'MT'
	        params.chrom                           	= (1..22) +  ['X', 'Y']
//	      	params.chrom                           	= '22'

		//Annotation
		params.CADD_1_6_whole_genome_SNVs	= '$ReferenceDir/GRCh37/CADD/V1.6/whole_genome_SNVs.tsv.gz'
		params.CADD_1_6_whole_genome_SNVs_index = '$ReferenceDir/GRCh37/CADD/V1.6/whole_genome_SNVs.tsv.gz.tbi'
		params.CADD_1_6_InDels			= '$ReferenceDir/GRCh37/CADD/V1.6/InDels.tsv.gz'
		params.CADD_1_6_InDels_index		= '$ReferenceDir/GRCh37/CADD/V1.6/InDels.tsv.gz.tbi'
		params.spliceai_snv			= '$ReferenceDir/GRCh37/SPLICEAI/spliceai_scores.masked.snv.hg19.vcf.gz'
                params.spliceai_snv_index               = '$ReferenceDir/GRCh37/SPLICEAI/spliceai_scores.masked.snv.hg19.vcf.gz.tbi'
		params.spliceai_indel			= '$ReferenceDir/GRCh37/SPLICEAI/spliceai_scores.masked.indel.hg19.vcf.gz'
                params.spliceai_indel_index             = '$ReferenceDir/GRCh37/SPLICEAI/spliceai_scores.masked.indel.hg19.vcf.gz.tbi'
		
		//tsv files containing reduced information from gnomAD largest file - code to generate the tsv files available in the GitHub repo of pipeline
		//This file is not necessary to obtain the vcf with variant frequencies and annotation
		params.gnomad_SNV_frequ			= '$ReferenceDir/GRCh37/gnomad/*.tsv'

		//SV subworkflow specific files
		params.genes_file			= 'Variant_catalogue_pipeline/testdata/reference/hg19_chr20.genes.bed'
		params.transposon_file			= 'Variant_catalogue_pipeline/testdata/reference/transposons.txt'
		params.variant_catalog			= 'Variant_catalogue_pipeline/testdata/reference/variant_catalog_chr20.json'
	}
	

        GRCh38 {
                params.ref                              = 'Variant_catalogue_pipeline/testdata/reference/Homo_sapiens_assembly38_chr20_chrM.fasta'
                params.ref_index                        = 'Variant_catalogue_pipeline/testdata/reference/Homo_sapiens_assembly38_chr20_chrM.fasta.fai'
 
		//Constant
		params.assembly				= 'GRCh38'
		params.Mitochondrial_chromosome		= 'chrM'
		params.chrom				= ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY']
//		params.chrom				= 'chr22'

		//Annotation
                params.CADD_1_6_whole_genome_SNVs       = '$ReferenceDir/GRCh38/CADD/V1.6/whole_genome_SNVs.tsv.gz'
                params.CADD_1_6_whole_genome_SNVs_index = '$ReferenceDir/GRCh38/CADD/V1.6/whole_genome_SNVs.tsv.gz.tbi'
                params.CADD_1_6_InDels                  = '$ReferenceDir/GRCh38/CADD/V1.6/gnomad.genomes.r3.0.indel.tsv.gz'
                params.CADD_1_6_InDels_index            = '$ReferenceDir/GRCh38/CADD/V1.6/gnomad.genomes.r3.0.indel.tsv.gz.tbi'
                params.spliceai_snv                     = '$ReferenceDir/GRCh38/SPLICEAI/spliceai_scores.masked.snv.hg38.vcf.gz'
                params.spliceai_snv_index               = '$ReferenceDir/GRCh38/SPLICEAI/spliceai_scores.masked.snv.hg38.vcf.gz.tbi'
                params.spliceai_indel                   = '$ReferenceDir/GRCh38/SPLICEAI/spliceai_scores.masked.indel.hg38.vcf.gz'
                params.spliceai_indel_index             = '$ReferenceDir/GRCh38/SPLICEAI/spliceai_scores.masked.indel.hg38.vcf.gz.tbi'

                //tsv files containing reduced information from gnomAD largest file - code to generate the tsv files available in the GitHub repo of pipeline
                //This file is not necessary to obtain the vcf with variant frequencies and annotation
                params.gnomad_SNV_frequ                 = '$ReferenceDir/GRCh38/gnomad/*.tsv'

                //SV subworkflow specific files
                params.genes_file                       = 'Variant_catalogue_pipeline/testdata/reference/Hg38_chr20.genes.bed'
                params.transposon_file                  = 'Variant_catalogue_pipeline/testdata/reference/transposons.txt'
                params.variant_catalog                  = 'Variant_catalogue_pipeline/testdata/reference/variant_catalog_chr20.json'
        }
	    singularity {
        singularity.autoMounts = true
        singularity.enabled    = true
	singularity.runOptions = "-e -B /projects,/tmp,/usr/bin/java,/opt -B /usr/lib64"
        charliecloud.enabled   = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
    }
	
}




process {
   //Hail
//    withName: 'Hail_STR|Hail_MEI_QC|Hail_sample_QC|Hail_SV_QC|Hail_variant_MT_QC|Hail_variant_QC' {
//    conda "bioconda::hail=0.2.58"
//    container = "https://depot.galaxyproject.org/singularity/hail%3A0.2.61--py37h9a982cc_1"
//    }
    
    // Picard_R, 2Gb, 4 CPUs
    withName: 'Picard_QualityScoreDistribution' {
        cpus=4
        memory=2.GB
	container = 'https://depot.galaxyproject.org/singularity/picard:2.27.4--hdfd78af_0'
    }

    // 8GB, 4cpus, R
    withName: 'shift_back|MT_Step3_metadata_sample' {
        memory = 8.GB
        cpus = 4
        container = 'https://depot.galaxyproject.org/singularity/r-stringr%3A1.1.0--r3.3.1_0'
    }

// Processes that should not require any path update to work
    // 4GB, 2cpus
    withName: 'MT_MergeVcfs|list_vcfs_txt|MEI_data_organization' {
        memory = 4.GB
        cpus = 2
    }

    // 4GB, 2cpus
    withName: 'align_to_MT' {
        memory = 4.GB
        cpus = 2
	container = 'https://depot.galaxyproject.org/singularity/mulled-v2-fe8faa35dbf6dc65a0f7f5d4ea12e31a79f73e40:219b6c272b25e7e642ae3ff0bf0c5c81a5135ab4-0'
    }

    // 4GB, 8cpus
    withName: 'STR_data_organization' {
        memory = 4.GB
        cpus = 8
    }

    // 8GB, 2cpus
    withName: 'MarkDuplicates_index' {
        memory = 8.GB
        cpus = 2
	container = 'https://depot.galaxyproject.org/singularity/samtools:1.16.1--h6899075_1'
    }
    
    // 8GB, 2cpus
    withName: 'melt' {
        memory = 8.GB
        cpus = 2
	container = 'https://depot.galaxyproject.org/singularity/melt%3A1.0.3--pyh864c0ab_4'
    }    


    // 8GB, 4cpus
    withName: 'MT_data_organization|Hail_variant_MT_QC|MT_Step3_metadata_sample|MT_Step3_metadata|MT_haplocheck|MT_Step2_participant_data|MT_Step1_input_tsv|Hail_variant_QC|SNV_data_organization|SV_data_organization' {
        memory = 8.GB
        cpus = 4
    }

    // 8GB, 4cpus
    withName: 'MT_norm|SV_smoove_bcftools|expansion_hunter_bcftools' {
        memory = 8.GB
        cpus = 4
	container = 'https://depot.galaxyproject.org/singularity/bcftools:1.16--hfe4b78e_1'
    }


    // 12Gb, 8 cpus
    withName: 'Hail_sample_QC' {
        memory = 12.GB
        cpus = 8
	container = "https://depot.galaxyproject.org/singularity/hail%3A0.2.61--py37h9a982cc_1"
    }
    
    // 12Gb, 8 cpus
    withName: 'expansion_hunter' {
        memory = 12.GB
        cpus = 8
	container = 'https://depot.galaxyproject.org/singularity/expansionhunter:4.0.2--he785bd8_0'
    }
    
    // 12Gb, 8 cpus
    withName: 'align_sort_output_bam' {
        memory = 12.GB
        cpus = 8
        container = 'https://depot.galaxyproject.org/singularity/mulled-v2-fe8faa35dbf6dc65a0f7f5d4ea12e31a79f73e40:219b6c272b25e7e642ae3ff0bf0c5c81a5135ab4-0'

    }	

    // 32GB, 4 cpus
    withName: 'annotation_table_merged' {
        memory = 120.GB
        cpus = 20
    }

    // 20GB, 8 cpus
    withName: 'merge_samples|merge_samples_miss0' {
        memory = 20.GB
        cpus = 8
    }
    
    // 20GB, 8 cpus
    withName: 'samtools_fixmate' {
        memory = 20.GB
        cpus = 8
	container = 'https://depot.galaxyproject.org/singularity/samtools:1.16.1--h6899075_1'
    }

    // 40GB, 8 cpus
    withName: 'bcf_to_vcf' {
        memory = 40.GB
        cpus = 8
	container = 'https://depot.galaxyproject.org/singularity/bcftools:1.16--hfe4b78e_1'
    }

    // 40GB, 8 cpus
    withName: 'bwa_index' {
        memory = 40.GB
        cpus = 8
	container = "https://depot.galaxyproject.org/singularity/bwa:0.7.17--hed695b0_7"
    }

    //FastQC, 2GB, 4CPUs
    withName: 'fastqc' {
        memory = 2.GB
        cpus = 4
        container = "https://depot.galaxyproject.org/singularity/fastqc:0.11.9--0"
    }

    //MultiQC 4GB
    withName: 'multiqc_indiv' {
        memory=4.GB
        container = "https://depot.galaxyproject.org/singularity/multiqc:1.13--pyhdfd78af_0"
    }

    //Mosdepth, 4GB
    withName: 'Mosdepth' {
        memory = 4.GB
        container = "https://depot.galaxyproject.org/singularity/mosdepth:0.3.3--hdfd78af_1"
    }
     
    //DeepVariant
    withName: 'deepvariant_call' {
        memory = 60.GB
        cpus = 39
//	container = "https://depot.galaxyproject.org/singularity/deepvariant%3A1.4.0--py36hf3e76ba_0"
        container = "google/deepvariant:1.4.0"
	ext.args = ' --regions=\"chr22:0-46709983\" '
    }

    //GLnexus
    withName: 'GLnexus_cli' {
        memory = 200.GB
        cpus = 39
        container = "https://depot.galaxyproject.org/singularity/glnexus:1.4.1--h40d77a6_0"
    }

    //GATK 4GB
    withName: 'MarkDuplicates|MT_MergeVcfs|MT_call_variants|Extract_MT_Read|MT_Filter_Mutect_Calls|MT_FilterOut_sites|MT_LeftAlignAndTrimVariants|MT_Liftover|MT_Merge_stat_file|MT_SamtoFastq' {
        memory=4.GB
	container = "https://depot.galaxyproject.org/singularity/gatk4%3A4.3.0.0--py36hdfd78af_0"
//        container = "broadinstitute/gatk:4.3.0.0"
    }

    //GATK, 4 CPUs , 8Gb
    withName: 'Picard_CollectWgsMetrics|Picard_CollectWgsMetrics_MT' {
        cpus = 4
        memory=8.GB
	container = 'https://depot.galaxyproject.org/singularity/gatk4%3A4.3.0.0--py36hdfd78af_0'
    }

    //GATK, 4 CPUs , 2Gb
    withName: 'Picard_CollectAlignmentSummaryMetrics' {
        cpus = 4
        memory=2.GB
	container = "https://depot.galaxyproject.org/singularity/gatk4%3A4.3.0.0--py36hdfd78af_0"
    }

    // Smoove, 8Gb, 3 cpus
    withName: 'SV_smoove' {
        cpus = 2
        memory  = 4.GB
        container = "https://depot.galaxyproject.org/singularity/smoove:0.2.8--h9ee0642_1" 
    }

    // Manta, 6Gb, 24cpus
    withName: 'SV_manta' {
        cpus = 20
        memory = 4.GB
        container = "docker://brentp/rare-disease-sv:v0.1.2"                                        
    }

    // Concat by sample, 6Gb, 2cpus
    withName: 'SV_concat_by_sample' {
        memory = 6.GB
        cpus = 2
        container = "https://depot.galaxyproject.org/singularity/bcftools%3A1.9--ha228f0b_4"
    }

    // paragraph_duphold
    withName: 'SV_paragraph_duphold' {
        container = "docker://brentp/rare-disease-sv:v0.1.2"
        cpus = 12
        memory = 6.GB
    }

    //Jasmine
    withName: 'SV_jasmine' {
        container = "docker://brentp/rare-disease-sv:v0.1.2"
        cpus = 4
        memory = 6.GB
    }

}
